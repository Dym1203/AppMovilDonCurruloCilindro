// Generated by view binder compiler. Do not edit!
package com.example.appmovildoncurrulocilindro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appmovildoncurrulocilindro.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRecoverPasswordBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnAceptar;

  @NonNull
  public final Button btnCancelar;

  @NonNull
  public final LinearLayout linearParte6;

  @NonNull
  public final LinearLayout linearParte7;

  @NonNull
  public final TextInputEditText tietConfirmarClave;

  @NonNull
  public final TextInputEditText tietCorreoCliente;

  @NonNull
  public final TextInputEditText tietNuevaClave;

  @NonNull
  public final TextInputLayout tilConfirmarClave;

  @NonNull
  public final TextInputLayout tilCorreoCliente;

  @NonNull
  public final TextInputLayout tilNuevaClave;

  private ActivityRecoverPasswordBinding(@NonNull RelativeLayout rootView,
      @NonNull Button btnAceptar, @NonNull Button btnCancelar, @NonNull LinearLayout linearParte6,
      @NonNull LinearLayout linearParte7, @NonNull TextInputEditText tietConfirmarClave,
      @NonNull TextInputEditText tietCorreoCliente, @NonNull TextInputEditText tietNuevaClave,
      @NonNull TextInputLayout tilConfirmarClave, @NonNull TextInputLayout tilCorreoCliente,
      @NonNull TextInputLayout tilNuevaClave) {
    this.rootView = rootView;
    this.btnAceptar = btnAceptar;
    this.btnCancelar = btnCancelar;
    this.linearParte6 = linearParte6;
    this.linearParte7 = linearParte7;
    this.tietConfirmarClave = tietConfirmarClave;
    this.tietCorreoCliente = tietCorreoCliente;
    this.tietNuevaClave = tietNuevaClave;
    this.tilConfirmarClave = tilConfirmarClave;
    this.tilCorreoCliente = tilCorreoCliente;
    this.tilNuevaClave = tilNuevaClave;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRecoverPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRecoverPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_recover_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRecoverPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAceptar;
      Button btnAceptar = ViewBindings.findChildViewById(rootView, id);
      if (btnAceptar == null) {
        break missingId;
      }

      id = R.id.btnCancelar;
      Button btnCancelar = ViewBindings.findChildViewById(rootView, id);
      if (btnCancelar == null) {
        break missingId;
      }

      id = R.id.linearParte6;
      LinearLayout linearParte6 = ViewBindings.findChildViewById(rootView, id);
      if (linearParte6 == null) {
        break missingId;
      }

      id = R.id.linearParte7;
      LinearLayout linearParte7 = ViewBindings.findChildViewById(rootView, id);
      if (linearParte7 == null) {
        break missingId;
      }

      id = R.id.tietConfirmarClave;
      TextInputEditText tietConfirmarClave = ViewBindings.findChildViewById(rootView, id);
      if (tietConfirmarClave == null) {
        break missingId;
      }

      id = R.id.tietCorreoCliente;
      TextInputEditText tietCorreoCliente = ViewBindings.findChildViewById(rootView, id);
      if (tietCorreoCliente == null) {
        break missingId;
      }

      id = R.id.tietNuevaClave;
      TextInputEditText tietNuevaClave = ViewBindings.findChildViewById(rootView, id);
      if (tietNuevaClave == null) {
        break missingId;
      }

      id = R.id.tilConfirmarClave;
      TextInputLayout tilConfirmarClave = ViewBindings.findChildViewById(rootView, id);
      if (tilConfirmarClave == null) {
        break missingId;
      }

      id = R.id.tilCorreoCliente;
      TextInputLayout tilCorreoCliente = ViewBindings.findChildViewById(rootView, id);
      if (tilCorreoCliente == null) {
        break missingId;
      }

      id = R.id.tilNuevaClave;
      TextInputLayout tilNuevaClave = ViewBindings.findChildViewById(rootView, id);
      if (tilNuevaClave == null) {
        break missingId;
      }

      return new ActivityRecoverPasswordBinding((RelativeLayout) rootView, btnAceptar, btnCancelar,
          linearParte6, linearParte7, tietConfirmarClave, tietCorreoCliente, tietNuevaClave,
          tilConfirmarClave, tilCorreoCliente, tilNuevaClave);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
