// Generated by view binder compiler. Do not edit!
package com.example.appmovildoncurrulocilindro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appmovildoncurrulocilindro.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDetalleMisComprasBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ShapeableImageView imgProduct;

  @NonNull
  public final TextView txtNameCodDetailPurchases;

  @NonNull
  public final TextView txtNamePlatillo;

  @NonNull
  public final TextView txtNamePricePlatillo;

  @NonNull
  public final TextView txtNameQuantity;

  @NonNull
  public final TextView txtValueCodDetailPurchases;

  @NonNull
  public final TextView txtValuePlatillo;

  @NonNull
  public final TextView txtValuePrecioPlatillo;

  @NonNull
  public final TextView txtValueQuantity;

  private ItemDetalleMisComprasBinding(@NonNull LinearLayout rootView,
      @NonNull ShapeableImageView imgProduct, @NonNull TextView txtNameCodDetailPurchases,
      @NonNull TextView txtNamePlatillo, @NonNull TextView txtNamePricePlatillo,
      @NonNull TextView txtNameQuantity, @NonNull TextView txtValueCodDetailPurchases,
      @NonNull TextView txtValuePlatillo, @NonNull TextView txtValuePrecioPlatillo,
      @NonNull TextView txtValueQuantity) {
    this.rootView = rootView;
    this.imgProduct = imgProduct;
    this.txtNameCodDetailPurchases = txtNameCodDetailPurchases;
    this.txtNamePlatillo = txtNamePlatillo;
    this.txtNamePricePlatillo = txtNamePricePlatillo;
    this.txtNameQuantity = txtNameQuantity;
    this.txtValueCodDetailPurchases = txtValueCodDetailPurchases;
    this.txtValuePlatillo = txtValuePlatillo;
    this.txtValuePrecioPlatillo = txtValuePrecioPlatillo;
    this.txtValueQuantity = txtValueQuantity;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDetalleMisComprasBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDetalleMisComprasBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_detalle_mis_compras, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDetalleMisComprasBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgProduct;
      ShapeableImageView imgProduct = ViewBindings.findChildViewById(rootView, id);
      if (imgProduct == null) {
        break missingId;
      }

      id = R.id.txtNameCodDetailPurchases;
      TextView txtNameCodDetailPurchases = ViewBindings.findChildViewById(rootView, id);
      if (txtNameCodDetailPurchases == null) {
        break missingId;
      }

      id = R.id.txtNamePlatillo;
      TextView txtNamePlatillo = ViewBindings.findChildViewById(rootView, id);
      if (txtNamePlatillo == null) {
        break missingId;
      }

      id = R.id.txtNamePricePlatillo;
      TextView txtNamePricePlatillo = ViewBindings.findChildViewById(rootView, id);
      if (txtNamePricePlatillo == null) {
        break missingId;
      }

      id = R.id.txtNameQuantity;
      TextView txtNameQuantity = ViewBindings.findChildViewById(rootView, id);
      if (txtNameQuantity == null) {
        break missingId;
      }

      id = R.id.txtValueCodDetailPurchases;
      TextView txtValueCodDetailPurchases = ViewBindings.findChildViewById(rootView, id);
      if (txtValueCodDetailPurchases == null) {
        break missingId;
      }

      id = R.id.txtValuePlatillo;
      TextView txtValuePlatillo = ViewBindings.findChildViewById(rootView, id);
      if (txtValuePlatillo == null) {
        break missingId;
      }

      id = R.id.txtValuePrecioPlatillo;
      TextView txtValuePrecioPlatillo = ViewBindings.findChildViewById(rootView, id);
      if (txtValuePrecioPlatillo == null) {
        break missingId;
      }

      id = R.id.txtValueQuantity;
      TextView txtValueQuantity = ViewBindings.findChildViewById(rootView, id);
      if (txtValueQuantity == null) {
        break missingId;
      }

      return new ItemDetalleMisComprasBinding((LinearLayout) rootView, imgProduct,
          txtNameCodDetailPurchases, txtNamePlatillo, txtNamePricePlatillo, txtNameQuantity,
          txtValueCodDetailPurchases, txtValuePlatillo, txtValuePrecioPlatillo, txtValueQuantity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
